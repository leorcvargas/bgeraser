version: "3.5"
services:
  app:
    build: .
    hostname: app
    depends_on:
      db:
        condition: service_healthy
    environment:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
    ports:
      - "8080:8080"
    expose:
      - 8080

  worker:
    build:
      dockerfile: Dockerfile.worker
    depends_on:
      db:
        condition: service_healthy
    environment:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
    volumes:
      - rembg-models:/root/.u2net

  db:
    image: postgres:15-alpine
    hostname: db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: bgeraser
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 25s

  queues:
    image: redis:alpine
    hostname: queues
    ports:
      - "6379:6379"

volumes:
  postgres-db:
  rembg-models:
